
Actividad_Final.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00800100  00000854  000008c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000854  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  000008de  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000093c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000078  00000000  00000000  0000097c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000afd  00000000  00000000  000009f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000075c  00000000  00000000  000014f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000480  00000000  00000000  00001c4d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000120  00000000  00000000  000020d0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000044a  00000000  00000000  000021f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000327  00000000  00000000  0000263a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000068  00000000  00000000  00002961  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 e5       	ldi	r30, 0x54	; 84
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 31       	cpi	r26, 0x16	; 22
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <main>
  8e:	0c 94 28 04 	jmp	0x850	; 0x850 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <I2C_Init>:
#define RTC_ADDR 0xD0  // Dirección del DS3231 en I2C (Escribir)
#define LCD_ADDR 0x27  // Dirección del LCD en I2C (Asegúrate de que sea la correcta para tu LCD)

void I2C_Init(void) {
	// Inicializar I2C (TWI) a 100kHz
	TWBR = 32;  // Configura el baud rate del bus I2C
  96:	80 e2       	ldi	r24, 0x20	; 32
  98:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
	TWSR = 0;   // Preescalador a 1
  9c:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
  a0:	08 95       	ret

000000a2 <I2C_Start>:
}

void I2C_Start(uint8_t address) {
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN);  // Generar start condition
  a2:	94 ea       	ldi	r25, 0xA4	; 164
  a4:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while (!(TWCR & (1 << TWINT)));  // Esperar hasta que se complete la transmisión
  a8:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  ac:	99 23       	and	r25, r25
  ae:	e4 f7       	brge	.-8      	; 0xa8 <I2C_Start+0x6>
	TWDR = address;  // Cargar la dirección del esclavo
  b0:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	TWCR = (1 << TWINT) | (1 << TWEN);  // Iniciar la transmisión
  b4:	84 e8       	ldi	r24, 0x84	; 132
  b6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while (!(TWCR & (1 << TWINT)));  // Esperar hasta que se complete
  ba:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  be:	88 23       	and	r24, r24
  c0:	e4 f7       	brge	.-8      	; 0xba <I2C_Start+0x18>
}
  c2:	08 95       	ret

000000c4 <I2C_Stop>:

void I2C_Stop(void) {
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);  // Generar stop condition
  c4:	84 e9       	ldi	r24, 0x94	; 148
  c6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while (TWCR & (1 << TWSTO));  // Esperar hasta que se complete el stop
  ca:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  ce:	84 fd       	sbrc	r24, 4
  d0:	fc cf       	rjmp	.-8      	; 0xca <I2C_Stop+0x6>
}
  d2:	08 95       	ret

000000d4 <I2C_Write>:

void I2C_Write(uint8_t data) {
	TWDR = data;  // Cargar dato a enviar
  d4:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	TWCR = (1 << TWINT) | (1 << TWEN);  // Iniciar la transmisión
  d8:	84 e8       	ldi	r24, 0x84	; 132
  da:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while (!(TWCR & (1 << TWINT)));  // Esperar hasta que se complete
  de:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  e2:	88 23       	and	r24, r24
  e4:	e4 f7       	brge	.-8      	; 0xde <I2C_Write+0xa>
}
  e6:	08 95       	ret

000000e8 <I2C_ReadAck>:

uint8_t I2C_ReadAck(void) {
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);  // Enviar ACK después de leer
  e8:	84 ec       	ldi	r24, 0xC4	; 196
  ea:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while (!(TWCR & (1 << TWINT)));  // Esperar hasta que se complete
  ee:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  f2:	88 23       	and	r24, r24
  f4:	e4 f7       	brge	.-8      	; 0xee <I2C_ReadAck+0x6>
	return TWDR;  // Retornar dato recibido
  f6:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
}
  fa:	08 95       	ret

000000fc <I2C_ReadNack>:

uint8_t I2C_ReadNack(void) {
	TWCR = (1 << TWINT) | (1 << TWEN);  // Enviar NACK después de leer
  fc:	84 e8       	ldi	r24, 0x84	; 132
  fe:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while (!(TWCR & (1 << TWINT)));  // Esperar hasta que se complete
 102:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 106:	88 23       	and	r24, r24
 108:	e4 f7       	brge	.-8      	; 0x102 <I2C_ReadNack+0x6>
	return TWDR;  // Retornar dato recibido
 10a:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
}
 10e:	08 95       	ret

00000110 <RTC_ReadTime>:

// Función para leer la hora y fecha del RTC
void RTC_ReadTime(uint8_t* hour, uint8_t* minute, uint8_t* second) {
 110:	ef 92       	push	r14
 112:	ff 92       	push	r15
 114:	0f 93       	push	r16
 116:	1f 93       	push	r17
 118:	cf 93       	push	r28
 11a:	df 93       	push	r29
 11c:	ec 01       	movw	r28, r24
 11e:	8b 01       	movw	r16, r22
 120:	7a 01       	movw	r14, r20
	I2C_Start(RTC_ADDR);  // Iniciar comunicación con el RTC
 122:	80 ed       	ldi	r24, 0xD0	; 208
 124:	0e 94 51 00 	call	0xa2	; 0xa2 <I2C_Start>
	I2C_Write(0x00);  // Dirección del registro de segundos
 128:	80 e0       	ldi	r24, 0x00	; 0
 12a:	0e 94 6a 00 	call	0xd4	; 0xd4 <I2C_Write>
	I2C_Start(RTC_ADDR + 1);  // Repetir inicio para leer
 12e:	81 ed       	ldi	r24, 0xD1	; 209
 130:	0e 94 51 00 	call	0xa2	; 0xa2 <I2C_Start>
	*second = I2C_ReadAck();
 134:	0e 94 74 00 	call	0xe8	; 0xe8 <I2C_ReadAck>
 138:	f7 01       	movw	r30, r14
 13a:	80 83       	st	Z, r24
	*minute = I2C_ReadAck();
 13c:	0e 94 74 00 	call	0xe8	; 0xe8 <I2C_ReadAck>
 140:	f8 01       	movw	r30, r16
 142:	80 83       	st	Z, r24
	*hour = I2C_ReadNack();
 144:	0e 94 7e 00 	call	0xfc	; 0xfc <I2C_ReadNack>
 148:	88 83       	st	Y, r24
	I2C_Stop();  // Detener la comunicación
 14a:	0e 94 62 00 	call	0xc4	; 0xc4 <I2C_Stop>
}
 14e:	df 91       	pop	r29
 150:	cf 91       	pop	r28
 152:	1f 91       	pop	r17
 154:	0f 91       	pop	r16
 156:	ff 90       	pop	r15
 158:	ef 90       	pop	r14
 15a:	08 95       	ret

0000015c <LCD_SendCommand>:

// Función para mostrar los datos en el LCD
void LCD_SendCommand(uint8_t command) {
 15c:	cf 93       	push	r28
 15e:	c8 2f       	mov	r28, r24
	I2C_Start(LCD_ADDR);
 160:	87 e2       	ldi	r24, 0x27	; 39
 162:	0e 94 51 00 	call	0xa2	; 0xa2 <I2C_Start>
	I2C_Write(0x00);  // Comando para el LCD
 166:	80 e0       	ldi	r24, 0x00	; 0
 168:	0e 94 6a 00 	call	0xd4	; 0xd4 <I2C_Write>
	I2C_Write(command);
 16c:	8c 2f       	mov	r24, r28
 16e:	0e 94 6a 00 	call	0xd4	; 0xd4 <I2C_Write>
	I2C_Stop();
 172:	0e 94 62 00 	call	0xc4	; 0xc4 <I2C_Stop>
}
 176:	cf 91       	pop	r28
 178:	08 95       	ret

0000017a <LCD_SendData>:

void LCD_SendData(uint8_t data) {
 17a:	cf 93       	push	r28
 17c:	c8 2f       	mov	r28, r24
	I2C_Start(LCD_ADDR);
 17e:	87 e2       	ldi	r24, 0x27	; 39
 180:	0e 94 51 00 	call	0xa2	; 0xa2 <I2C_Start>
	I2C_Write(0x40);  // Datos para el LCD
 184:	80 e4       	ldi	r24, 0x40	; 64
 186:	0e 94 6a 00 	call	0xd4	; 0xd4 <I2C_Write>
	I2C_Write(data);
 18a:	8c 2f       	mov	r24, r28
 18c:	0e 94 6a 00 	call	0xd4	; 0xd4 <I2C_Write>
	I2C_Stop();
 190:	0e 94 62 00 	call	0xc4	; 0xc4 <I2C_Stop>
}
 194:	cf 91       	pop	r28
 196:	08 95       	ret

00000198 <LCD_Init>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 198:	87 e8       	ldi	r24, 0x87	; 135
 19a:	93 e1       	ldi	r25, 0x13	; 19
 19c:	01 97       	sbiw	r24, 0x01	; 1
 19e:	f1 f7       	brne	.-4      	; 0x19c <LCD_Init+0x4>
 1a0:	00 c0       	rjmp	.+0      	; 0x1a2 <LCD_Init+0xa>
 1a2:	00 00       	nop

void LCD_Init(void) {
	_delay_ms(20);  // Esperar 20ms
	LCD_SendCommand(0x38);  // Configuración en modo de 8 bits
 1a4:	88 e3       	ldi	r24, 0x38	; 56
 1a6:	0e 94 ae 00 	call	0x15c	; 0x15c <LCD_SendCommand>
	LCD_SendCommand(0x0C);  // Encender pantalla y cursor
 1aa:	8c e0       	ldi	r24, 0x0C	; 12
 1ac:	0e 94 ae 00 	call	0x15c	; 0x15c <LCD_SendCommand>
	LCD_SendCommand(0x01);  // Limpiar pantalla
 1b0:	81 e0       	ldi	r24, 0x01	; 1
 1b2:	0e 94 ae 00 	call	0x15c	; 0x15c <LCD_SendCommand>
	LCD_SendCommand(0x06);  // Modo de incremento
 1b6:	86 e0       	ldi	r24, 0x06	; 6
 1b8:	0e 94 ae 00 	call	0x15c	; 0x15c <LCD_SendCommand>
 1bc:	08 95       	ret

000001be <LCD_Print>:
}

void LCD_Print(char* str) {
 1be:	cf 93       	push	r28
 1c0:	df 93       	push	r29
 1c2:	ec 01       	movw	r28, r24
	while (*str) {
 1c4:	03 c0       	rjmp	.+6      	; 0x1cc <LCD_Print+0xe>
		LCD_SendData(*str++);
 1c6:	21 96       	adiw	r28, 0x01	; 1
 1c8:	0e 94 bd 00 	call	0x17a	; 0x17a <LCD_SendData>
	LCD_SendCommand(0x01);  // Limpiar pantalla
	LCD_SendCommand(0x06);  // Modo de incremento
}

void LCD_Print(char* str) {
	while (*str) {
 1cc:	88 81       	ld	r24, Y
 1ce:	81 11       	cpse	r24, r1
 1d0:	fa cf       	rjmp	.-12     	; 0x1c6 <LCD_Print+0x8>
		LCD_SendData(*str++);
	}
}
 1d2:	df 91       	pop	r29
 1d4:	cf 91       	pop	r28
 1d6:	08 95       	ret

000001d8 <main>:

int main(void) {
 1d8:	cf 93       	push	r28
 1da:	df 93       	push	r29
 1dc:	cd b7       	in	r28, 0x3d	; 61
 1de:	de b7       	in	r29, 0x3e	; 62
 1e0:	67 97       	sbiw	r28, 0x17	; 23
 1e2:	0f b6       	in	r0, 0x3f	; 63
 1e4:	f8 94       	cli
 1e6:	de bf       	out	0x3e, r29	; 62
 1e8:	0f be       	out	0x3f, r0	; 63
 1ea:	cd bf       	out	0x3d, r28	; 61
	I2C_Init();  // Inicializar I2C
 1ec:	0e 94 4b 00 	call	0x96	; 0x96 <I2C_Init>
	LCD_Init();  // Inicializar LCD
 1f0:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_Init>

	uint8_t hour, minute, second;

	while (1) {
		RTC_ReadTime(&hour, &minute, &second);  // Leer hora del RTC
 1f4:	ae 01       	movw	r20, r28
 1f6:	4d 5f       	subi	r20, 0xFD	; 253
 1f8:	5f 4f       	sbci	r21, 0xFF	; 255
 1fa:	be 01       	movw	r22, r28
 1fc:	6e 5f       	subi	r22, 0xFE	; 254
 1fe:	7f 4f       	sbci	r23, 0xFF	; 255
 200:	ce 01       	movw	r24, r28
 202:	01 96       	adiw	r24, 0x01	; 1
 204:	0e 94 88 00 	call	0x110	; 0x110 <RTC_ReadTime>

		char buffer[20];
		snprintf(buffer, sizeof(buffer), "Time: %02d:%02d:%02d", hour, minute, second);
 208:	8b 81       	ldd	r24, Y+3	; 0x03
 20a:	1f 92       	push	r1
 20c:	8f 93       	push	r24
 20e:	8a 81       	ldd	r24, Y+2	; 0x02
 210:	1f 92       	push	r1
 212:	8f 93       	push	r24
 214:	89 81       	ldd	r24, Y+1	; 0x01
 216:	1f 92       	push	r1
 218:	8f 93       	push	r24
 21a:	80 e0       	ldi	r24, 0x00	; 0
 21c:	91 e0       	ldi	r25, 0x01	; 1
 21e:	9f 93       	push	r25
 220:	8f 93       	push	r24
 222:	1f 92       	push	r1
 224:	84 e1       	ldi	r24, 0x14	; 20
 226:	8f 93       	push	r24
 228:	8e 01       	movw	r16, r28
 22a:	0c 5f       	subi	r16, 0xFC	; 252
 22c:	1f 4f       	sbci	r17, 0xFF	; 255
 22e:	1f 93       	push	r17
 230:	0f 93       	push	r16
 232:	0e 94 30 01 	call	0x260	; 0x260 <snprintf>

		LCD_SendCommand(0x01);  // Limpiar pantalla
 236:	81 e0       	ldi	r24, 0x01	; 1
 238:	0e 94 ae 00 	call	0x15c	; 0x15c <LCD_SendCommand>
		LCD_Print(buffer);  // Mostrar hora en el LCD
 23c:	c8 01       	movw	r24, r16
 23e:	0e 94 df 00 	call	0x1be	; 0x1be <LCD_Print>
 242:	2f e3       	ldi	r18, 0x3F	; 63
 244:	8d e0       	ldi	r24, 0x0D	; 13
 246:	93 e0       	ldi	r25, 0x03	; 3
 248:	21 50       	subi	r18, 0x01	; 1
 24a:	80 40       	sbci	r24, 0x00	; 0
 24c:	90 40       	sbci	r25, 0x00	; 0
 24e:	e1 f7       	brne	.-8      	; 0x248 <main+0x70>
 250:	00 c0       	rjmp	.+0      	; 0x252 <main+0x7a>
 252:	00 00       	nop
 254:	0f b6       	in	r0, 0x3f	; 63
 256:	f8 94       	cli
 258:	de bf       	out	0x3e, r29	; 62
 25a:	0f be       	out	0x3f, r0	; 63
 25c:	cd bf       	out	0x3d, r28	; 61
 25e:	ca cf       	rjmp	.-108    	; 0x1f4 <main+0x1c>

00000260 <snprintf>:
 260:	ae e0       	ldi	r26, 0x0E	; 14
 262:	b0 e0       	ldi	r27, 0x00	; 0
 264:	e6 e3       	ldi	r30, 0x36	; 54
 266:	f1 e0       	ldi	r31, 0x01	; 1
 268:	0c 94 ff 03 	jmp	0x7fe	; 0x7fe <__prologue_saves__+0x1c>
 26c:	0d 89       	ldd	r16, Y+21	; 0x15
 26e:	1e 89       	ldd	r17, Y+22	; 0x16
 270:	8f 89       	ldd	r24, Y+23	; 0x17
 272:	98 8d       	ldd	r25, Y+24	; 0x18
 274:	26 e0       	ldi	r18, 0x06	; 6
 276:	2c 83       	std	Y+4, r18	; 0x04
 278:	1a 83       	std	Y+2, r17	; 0x02
 27a:	09 83       	std	Y+1, r16	; 0x01
 27c:	97 ff       	sbrs	r25, 7
 27e:	02 c0       	rjmp	.+4      	; 0x284 <snprintf+0x24>
 280:	80 e0       	ldi	r24, 0x00	; 0
 282:	90 e8       	ldi	r25, 0x80	; 128
 284:	01 97       	sbiw	r24, 0x01	; 1
 286:	9e 83       	std	Y+6, r25	; 0x06
 288:	8d 83       	std	Y+5, r24	; 0x05
 28a:	ae 01       	movw	r20, r28
 28c:	45 5e       	subi	r20, 0xE5	; 229
 28e:	5f 4f       	sbci	r21, 0xFF	; 255
 290:	69 8d       	ldd	r22, Y+25	; 0x19
 292:	7a 8d       	ldd	r23, Y+26	; 0x1a
 294:	ce 01       	movw	r24, r28
 296:	01 96       	adiw	r24, 0x01	; 1
 298:	0e 94 60 01 	call	0x2c0	; 0x2c0 <vfprintf>
 29c:	4d 81       	ldd	r20, Y+5	; 0x05
 29e:	5e 81       	ldd	r21, Y+6	; 0x06
 2a0:	57 fd       	sbrc	r21, 7
 2a2:	0a c0       	rjmp	.+20     	; 0x2b8 <snprintf+0x58>
 2a4:	2f 81       	ldd	r18, Y+7	; 0x07
 2a6:	38 85       	ldd	r19, Y+8	; 0x08
 2a8:	42 17       	cp	r20, r18
 2aa:	53 07       	cpc	r21, r19
 2ac:	0c f4       	brge	.+2      	; 0x2b0 <snprintf+0x50>
 2ae:	9a 01       	movw	r18, r20
 2b0:	f8 01       	movw	r30, r16
 2b2:	e2 0f       	add	r30, r18
 2b4:	f3 1f       	adc	r31, r19
 2b6:	10 82       	st	Z, r1
 2b8:	2e 96       	adiw	r28, 0x0e	; 14
 2ba:	e4 e0       	ldi	r30, 0x04	; 4
 2bc:	0c 94 1b 04 	jmp	0x836	; 0x836 <__epilogue_restores__+0x1c>

000002c0 <vfprintf>:
 2c0:	ab e0       	ldi	r26, 0x0B	; 11
 2c2:	b0 e0       	ldi	r27, 0x00	; 0
 2c4:	e6 e6       	ldi	r30, 0x66	; 102
 2c6:	f1 e0       	ldi	r31, 0x01	; 1
 2c8:	0c 94 f1 03 	jmp	0x7e2	; 0x7e2 <__prologue_saves__>
 2cc:	6c 01       	movw	r12, r24
 2ce:	7b 01       	movw	r14, r22
 2d0:	8a 01       	movw	r16, r20
 2d2:	fc 01       	movw	r30, r24
 2d4:	17 82       	std	Z+7, r1	; 0x07
 2d6:	16 82       	std	Z+6, r1	; 0x06
 2d8:	83 81       	ldd	r24, Z+3	; 0x03
 2da:	81 ff       	sbrs	r24, 1
 2dc:	cc c1       	rjmp	.+920    	; 0x676 <__EEPROM_REGION_LENGTH__+0x276>
 2de:	ce 01       	movw	r24, r28
 2e0:	01 96       	adiw	r24, 0x01	; 1
 2e2:	3c 01       	movw	r6, r24
 2e4:	f6 01       	movw	r30, r12
 2e6:	93 81       	ldd	r25, Z+3	; 0x03
 2e8:	f7 01       	movw	r30, r14
 2ea:	93 fd       	sbrc	r25, 3
 2ec:	85 91       	lpm	r24, Z+
 2ee:	93 ff       	sbrs	r25, 3
 2f0:	81 91       	ld	r24, Z+
 2f2:	7f 01       	movw	r14, r30
 2f4:	88 23       	and	r24, r24
 2f6:	09 f4       	brne	.+2      	; 0x2fa <vfprintf+0x3a>
 2f8:	ba c1       	rjmp	.+884    	; 0x66e <__EEPROM_REGION_LENGTH__+0x26e>
 2fa:	85 32       	cpi	r24, 0x25	; 37
 2fc:	39 f4       	brne	.+14     	; 0x30c <vfprintf+0x4c>
 2fe:	93 fd       	sbrc	r25, 3
 300:	85 91       	lpm	r24, Z+
 302:	93 ff       	sbrs	r25, 3
 304:	81 91       	ld	r24, Z+
 306:	7f 01       	movw	r14, r30
 308:	85 32       	cpi	r24, 0x25	; 37
 30a:	29 f4       	brne	.+10     	; 0x316 <vfprintf+0x56>
 30c:	b6 01       	movw	r22, r12
 30e:	90 e0       	ldi	r25, 0x00	; 0
 310:	0e 94 57 03 	call	0x6ae	; 0x6ae <fputc>
 314:	e7 cf       	rjmp	.-50     	; 0x2e4 <vfprintf+0x24>
 316:	91 2c       	mov	r9, r1
 318:	21 2c       	mov	r2, r1
 31a:	31 2c       	mov	r3, r1
 31c:	ff e1       	ldi	r31, 0x1F	; 31
 31e:	f3 15       	cp	r31, r3
 320:	d8 f0       	brcs	.+54     	; 0x358 <vfprintf+0x98>
 322:	8b 32       	cpi	r24, 0x2B	; 43
 324:	79 f0       	breq	.+30     	; 0x344 <vfprintf+0x84>
 326:	38 f4       	brcc	.+14     	; 0x336 <vfprintf+0x76>
 328:	80 32       	cpi	r24, 0x20	; 32
 32a:	79 f0       	breq	.+30     	; 0x34a <vfprintf+0x8a>
 32c:	83 32       	cpi	r24, 0x23	; 35
 32e:	a1 f4       	brne	.+40     	; 0x358 <vfprintf+0x98>
 330:	23 2d       	mov	r18, r3
 332:	20 61       	ori	r18, 0x10	; 16
 334:	1d c0       	rjmp	.+58     	; 0x370 <vfprintf+0xb0>
 336:	8d 32       	cpi	r24, 0x2D	; 45
 338:	61 f0       	breq	.+24     	; 0x352 <vfprintf+0x92>
 33a:	80 33       	cpi	r24, 0x30	; 48
 33c:	69 f4       	brne	.+26     	; 0x358 <vfprintf+0x98>
 33e:	23 2d       	mov	r18, r3
 340:	21 60       	ori	r18, 0x01	; 1
 342:	16 c0       	rjmp	.+44     	; 0x370 <vfprintf+0xb0>
 344:	83 2d       	mov	r24, r3
 346:	82 60       	ori	r24, 0x02	; 2
 348:	38 2e       	mov	r3, r24
 34a:	e3 2d       	mov	r30, r3
 34c:	e4 60       	ori	r30, 0x04	; 4
 34e:	3e 2e       	mov	r3, r30
 350:	2a c0       	rjmp	.+84     	; 0x3a6 <vfprintf+0xe6>
 352:	f3 2d       	mov	r31, r3
 354:	f8 60       	ori	r31, 0x08	; 8
 356:	1d c0       	rjmp	.+58     	; 0x392 <vfprintf+0xd2>
 358:	37 fc       	sbrc	r3, 7
 35a:	2d c0       	rjmp	.+90     	; 0x3b6 <vfprintf+0xf6>
 35c:	20 ed       	ldi	r18, 0xD0	; 208
 35e:	28 0f       	add	r18, r24
 360:	2a 30       	cpi	r18, 0x0A	; 10
 362:	40 f0       	brcs	.+16     	; 0x374 <vfprintf+0xb4>
 364:	8e 32       	cpi	r24, 0x2E	; 46
 366:	b9 f4       	brne	.+46     	; 0x396 <vfprintf+0xd6>
 368:	36 fc       	sbrc	r3, 6
 36a:	81 c1       	rjmp	.+770    	; 0x66e <__EEPROM_REGION_LENGTH__+0x26e>
 36c:	23 2d       	mov	r18, r3
 36e:	20 64       	ori	r18, 0x40	; 64
 370:	32 2e       	mov	r3, r18
 372:	19 c0       	rjmp	.+50     	; 0x3a6 <vfprintf+0xe6>
 374:	36 fe       	sbrs	r3, 6
 376:	06 c0       	rjmp	.+12     	; 0x384 <vfprintf+0xc4>
 378:	8a e0       	ldi	r24, 0x0A	; 10
 37a:	98 9e       	mul	r9, r24
 37c:	20 0d       	add	r18, r0
 37e:	11 24       	eor	r1, r1
 380:	92 2e       	mov	r9, r18
 382:	11 c0       	rjmp	.+34     	; 0x3a6 <vfprintf+0xe6>
 384:	ea e0       	ldi	r30, 0x0A	; 10
 386:	2e 9e       	mul	r2, r30
 388:	20 0d       	add	r18, r0
 38a:	11 24       	eor	r1, r1
 38c:	22 2e       	mov	r2, r18
 38e:	f3 2d       	mov	r31, r3
 390:	f0 62       	ori	r31, 0x20	; 32
 392:	3f 2e       	mov	r3, r31
 394:	08 c0       	rjmp	.+16     	; 0x3a6 <vfprintf+0xe6>
 396:	8c 36       	cpi	r24, 0x6C	; 108
 398:	21 f4       	brne	.+8      	; 0x3a2 <vfprintf+0xe2>
 39a:	83 2d       	mov	r24, r3
 39c:	80 68       	ori	r24, 0x80	; 128
 39e:	38 2e       	mov	r3, r24
 3a0:	02 c0       	rjmp	.+4      	; 0x3a6 <vfprintf+0xe6>
 3a2:	88 36       	cpi	r24, 0x68	; 104
 3a4:	41 f4       	brne	.+16     	; 0x3b6 <vfprintf+0xf6>
 3a6:	f7 01       	movw	r30, r14
 3a8:	93 fd       	sbrc	r25, 3
 3aa:	85 91       	lpm	r24, Z+
 3ac:	93 ff       	sbrs	r25, 3
 3ae:	81 91       	ld	r24, Z+
 3b0:	7f 01       	movw	r14, r30
 3b2:	81 11       	cpse	r24, r1
 3b4:	b3 cf       	rjmp	.-154    	; 0x31c <vfprintf+0x5c>
 3b6:	98 2f       	mov	r25, r24
 3b8:	9f 7d       	andi	r25, 0xDF	; 223
 3ba:	95 54       	subi	r25, 0x45	; 69
 3bc:	93 30       	cpi	r25, 0x03	; 3
 3be:	28 f4       	brcc	.+10     	; 0x3ca <vfprintf+0x10a>
 3c0:	0c 5f       	subi	r16, 0xFC	; 252
 3c2:	1f 4f       	sbci	r17, 0xFF	; 255
 3c4:	9f e3       	ldi	r25, 0x3F	; 63
 3c6:	99 83       	std	Y+1, r25	; 0x01
 3c8:	0d c0       	rjmp	.+26     	; 0x3e4 <vfprintf+0x124>
 3ca:	83 36       	cpi	r24, 0x63	; 99
 3cc:	31 f0       	breq	.+12     	; 0x3da <vfprintf+0x11a>
 3ce:	83 37       	cpi	r24, 0x73	; 115
 3d0:	71 f0       	breq	.+28     	; 0x3ee <vfprintf+0x12e>
 3d2:	83 35       	cpi	r24, 0x53	; 83
 3d4:	09 f0       	breq	.+2      	; 0x3d8 <vfprintf+0x118>
 3d6:	59 c0       	rjmp	.+178    	; 0x48a <__EEPROM_REGION_LENGTH__+0x8a>
 3d8:	21 c0       	rjmp	.+66     	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
 3da:	f8 01       	movw	r30, r16
 3dc:	80 81       	ld	r24, Z
 3de:	89 83       	std	Y+1, r24	; 0x01
 3e0:	0e 5f       	subi	r16, 0xFE	; 254
 3e2:	1f 4f       	sbci	r17, 0xFF	; 255
 3e4:	88 24       	eor	r8, r8
 3e6:	83 94       	inc	r8
 3e8:	91 2c       	mov	r9, r1
 3ea:	53 01       	movw	r10, r6
 3ec:	13 c0       	rjmp	.+38     	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 3ee:	28 01       	movw	r4, r16
 3f0:	f2 e0       	ldi	r31, 0x02	; 2
 3f2:	4f 0e       	add	r4, r31
 3f4:	51 1c       	adc	r5, r1
 3f6:	f8 01       	movw	r30, r16
 3f8:	a0 80       	ld	r10, Z
 3fa:	b1 80       	ldd	r11, Z+1	; 0x01
 3fc:	36 fe       	sbrs	r3, 6
 3fe:	03 c0       	rjmp	.+6      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 400:	69 2d       	mov	r22, r9
 402:	70 e0       	ldi	r23, 0x00	; 0
 404:	02 c0       	rjmp	.+4      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 406:	6f ef       	ldi	r22, 0xFF	; 255
 408:	7f ef       	ldi	r23, 0xFF	; 255
 40a:	c5 01       	movw	r24, r10
 40c:	0e 94 4c 03 	call	0x698	; 0x698 <strnlen>
 410:	4c 01       	movw	r8, r24
 412:	82 01       	movw	r16, r4
 414:	f3 2d       	mov	r31, r3
 416:	ff 77       	andi	r31, 0x7F	; 127
 418:	3f 2e       	mov	r3, r31
 41a:	16 c0       	rjmp	.+44     	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
 41c:	28 01       	movw	r4, r16
 41e:	22 e0       	ldi	r18, 0x02	; 2
 420:	42 0e       	add	r4, r18
 422:	51 1c       	adc	r5, r1
 424:	f8 01       	movw	r30, r16
 426:	a0 80       	ld	r10, Z
 428:	b1 80       	ldd	r11, Z+1	; 0x01
 42a:	36 fe       	sbrs	r3, 6
 42c:	03 c0       	rjmp	.+6      	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 42e:	69 2d       	mov	r22, r9
 430:	70 e0       	ldi	r23, 0x00	; 0
 432:	02 c0       	rjmp	.+4      	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
 434:	6f ef       	ldi	r22, 0xFF	; 255
 436:	7f ef       	ldi	r23, 0xFF	; 255
 438:	c5 01       	movw	r24, r10
 43a:	0e 94 41 03 	call	0x682	; 0x682 <strnlen_P>
 43e:	4c 01       	movw	r8, r24
 440:	f3 2d       	mov	r31, r3
 442:	f0 68       	ori	r31, 0x80	; 128
 444:	3f 2e       	mov	r3, r31
 446:	82 01       	movw	r16, r4
 448:	33 fc       	sbrc	r3, 3
 44a:	1b c0       	rjmp	.+54     	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
 44c:	82 2d       	mov	r24, r2
 44e:	90 e0       	ldi	r25, 0x00	; 0
 450:	88 16       	cp	r8, r24
 452:	99 06       	cpc	r9, r25
 454:	b0 f4       	brcc	.+44     	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
 456:	b6 01       	movw	r22, r12
 458:	80 e2       	ldi	r24, 0x20	; 32
 45a:	90 e0       	ldi	r25, 0x00	; 0
 45c:	0e 94 57 03 	call	0x6ae	; 0x6ae <fputc>
 460:	2a 94       	dec	r2
 462:	f4 cf       	rjmp	.-24     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 464:	f5 01       	movw	r30, r10
 466:	37 fc       	sbrc	r3, 7
 468:	85 91       	lpm	r24, Z+
 46a:	37 fe       	sbrs	r3, 7
 46c:	81 91       	ld	r24, Z+
 46e:	5f 01       	movw	r10, r30
 470:	b6 01       	movw	r22, r12
 472:	90 e0       	ldi	r25, 0x00	; 0
 474:	0e 94 57 03 	call	0x6ae	; 0x6ae <fputc>
 478:	21 10       	cpse	r2, r1
 47a:	2a 94       	dec	r2
 47c:	21 e0       	ldi	r18, 0x01	; 1
 47e:	82 1a       	sub	r8, r18
 480:	91 08       	sbc	r9, r1
 482:	81 14       	cp	r8, r1
 484:	91 04       	cpc	r9, r1
 486:	71 f7       	brne	.-36     	; 0x464 <__EEPROM_REGION_LENGTH__+0x64>
 488:	e8 c0       	rjmp	.+464    	; 0x65a <__EEPROM_REGION_LENGTH__+0x25a>
 48a:	84 36       	cpi	r24, 0x64	; 100
 48c:	11 f0       	breq	.+4      	; 0x492 <__EEPROM_REGION_LENGTH__+0x92>
 48e:	89 36       	cpi	r24, 0x69	; 105
 490:	41 f5       	brne	.+80     	; 0x4e2 <__EEPROM_REGION_LENGTH__+0xe2>
 492:	f8 01       	movw	r30, r16
 494:	37 fe       	sbrs	r3, 7
 496:	07 c0       	rjmp	.+14     	; 0x4a6 <__EEPROM_REGION_LENGTH__+0xa6>
 498:	60 81       	ld	r22, Z
 49a:	71 81       	ldd	r23, Z+1	; 0x01
 49c:	82 81       	ldd	r24, Z+2	; 0x02
 49e:	93 81       	ldd	r25, Z+3	; 0x03
 4a0:	0c 5f       	subi	r16, 0xFC	; 252
 4a2:	1f 4f       	sbci	r17, 0xFF	; 255
 4a4:	08 c0       	rjmp	.+16     	; 0x4b6 <__EEPROM_REGION_LENGTH__+0xb6>
 4a6:	60 81       	ld	r22, Z
 4a8:	71 81       	ldd	r23, Z+1	; 0x01
 4aa:	07 2e       	mov	r0, r23
 4ac:	00 0c       	add	r0, r0
 4ae:	88 0b       	sbc	r24, r24
 4b0:	99 0b       	sbc	r25, r25
 4b2:	0e 5f       	subi	r16, 0xFE	; 254
 4b4:	1f 4f       	sbci	r17, 0xFF	; 255
 4b6:	f3 2d       	mov	r31, r3
 4b8:	ff 76       	andi	r31, 0x6F	; 111
 4ba:	3f 2e       	mov	r3, r31
 4bc:	97 ff       	sbrs	r25, 7
 4be:	09 c0       	rjmp	.+18     	; 0x4d2 <__EEPROM_REGION_LENGTH__+0xd2>
 4c0:	90 95       	com	r25
 4c2:	80 95       	com	r24
 4c4:	70 95       	com	r23
 4c6:	61 95       	neg	r22
 4c8:	7f 4f       	sbci	r23, 0xFF	; 255
 4ca:	8f 4f       	sbci	r24, 0xFF	; 255
 4cc:	9f 4f       	sbci	r25, 0xFF	; 255
 4ce:	f0 68       	ori	r31, 0x80	; 128
 4d0:	3f 2e       	mov	r3, r31
 4d2:	2a e0       	ldi	r18, 0x0A	; 10
 4d4:	30 e0       	ldi	r19, 0x00	; 0
 4d6:	a3 01       	movw	r20, r6
 4d8:	0e 94 93 03 	call	0x726	; 0x726 <__ultoa_invert>
 4dc:	88 2e       	mov	r8, r24
 4de:	86 18       	sub	r8, r6
 4e0:	45 c0       	rjmp	.+138    	; 0x56c <__EEPROM_REGION_LENGTH__+0x16c>
 4e2:	85 37       	cpi	r24, 0x75	; 117
 4e4:	31 f4       	brne	.+12     	; 0x4f2 <__EEPROM_REGION_LENGTH__+0xf2>
 4e6:	23 2d       	mov	r18, r3
 4e8:	2f 7e       	andi	r18, 0xEF	; 239
 4ea:	b2 2e       	mov	r11, r18
 4ec:	2a e0       	ldi	r18, 0x0A	; 10
 4ee:	30 e0       	ldi	r19, 0x00	; 0
 4f0:	25 c0       	rjmp	.+74     	; 0x53c <__EEPROM_REGION_LENGTH__+0x13c>
 4f2:	93 2d       	mov	r25, r3
 4f4:	99 7f       	andi	r25, 0xF9	; 249
 4f6:	b9 2e       	mov	r11, r25
 4f8:	8f 36       	cpi	r24, 0x6F	; 111
 4fa:	c1 f0       	breq	.+48     	; 0x52c <__EEPROM_REGION_LENGTH__+0x12c>
 4fc:	18 f4       	brcc	.+6      	; 0x504 <__EEPROM_REGION_LENGTH__+0x104>
 4fe:	88 35       	cpi	r24, 0x58	; 88
 500:	79 f0       	breq	.+30     	; 0x520 <__EEPROM_REGION_LENGTH__+0x120>
 502:	b5 c0       	rjmp	.+362    	; 0x66e <__EEPROM_REGION_LENGTH__+0x26e>
 504:	80 37       	cpi	r24, 0x70	; 112
 506:	19 f0       	breq	.+6      	; 0x50e <__EEPROM_REGION_LENGTH__+0x10e>
 508:	88 37       	cpi	r24, 0x78	; 120
 50a:	21 f0       	breq	.+8      	; 0x514 <__EEPROM_REGION_LENGTH__+0x114>
 50c:	b0 c0       	rjmp	.+352    	; 0x66e <__EEPROM_REGION_LENGTH__+0x26e>
 50e:	e9 2f       	mov	r30, r25
 510:	e0 61       	ori	r30, 0x10	; 16
 512:	be 2e       	mov	r11, r30
 514:	b4 fe       	sbrs	r11, 4
 516:	0d c0       	rjmp	.+26     	; 0x532 <__EEPROM_REGION_LENGTH__+0x132>
 518:	fb 2d       	mov	r31, r11
 51a:	f4 60       	ori	r31, 0x04	; 4
 51c:	bf 2e       	mov	r11, r31
 51e:	09 c0       	rjmp	.+18     	; 0x532 <__EEPROM_REGION_LENGTH__+0x132>
 520:	34 fe       	sbrs	r3, 4
 522:	0a c0       	rjmp	.+20     	; 0x538 <__EEPROM_REGION_LENGTH__+0x138>
 524:	29 2f       	mov	r18, r25
 526:	26 60       	ori	r18, 0x06	; 6
 528:	b2 2e       	mov	r11, r18
 52a:	06 c0       	rjmp	.+12     	; 0x538 <__EEPROM_REGION_LENGTH__+0x138>
 52c:	28 e0       	ldi	r18, 0x08	; 8
 52e:	30 e0       	ldi	r19, 0x00	; 0
 530:	05 c0       	rjmp	.+10     	; 0x53c <__EEPROM_REGION_LENGTH__+0x13c>
 532:	20 e1       	ldi	r18, 0x10	; 16
 534:	30 e0       	ldi	r19, 0x00	; 0
 536:	02 c0       	rjmp	.+4      	; 0x53c <__EEPROM_REGION_LENGTH__+0x13c>
 538:	20 e1       	ldi	r18, 0x10	; 16
 53a:	32 e0       	ldi	r19, 0x02	; 2
 53c:	f8 01       	movw	r30, r16
 53e:	b7 fe       	sbrs	r11, 7
 540:	07 c0       	rjmp	.+14     	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
 542:	60 81       	ld	r22, Z
 544:	71 81       	ldd	r23, Z+1	; 0x01
 546:	82 81       	ldd	r24, Z+2	; 0x02
 548:	93 81       	ldd	r25, Z+3	; 0x03
 54a:	0c 5f       	subi	r16, 0xFC	; 252
 54c:	1f 4f       	sbci	r17, 0xFF	; 255
 54e:	06 c0       	rjmp	.+12     	; 0x55c <__EEPROM_REGION_LENGTH__+0x15c>
 550:	60 81       	ld	r22, Z
 552:	71 81       	ldd	r23, Z+1	; 0x01
 554:	80 e0       	ldi	r24, 0x00	; 0
 556:	90 e0       	ldi	r25, 0x00	; 0
 558:	0e 5f       	subi	r16, 0xFE	; 254
 55a:	1f 4f       	sbci	r17, 0xFF	; 255
 55c:	a3 01       	movw	r20, r6
 55e:	0e 94 93 03 	call	0x726	; 0x726 <__ultoa_invert>
 562:	88 2e       	mov	r8, r24
 564:	86 18       	sub	r8, r6
 566:	fb 2d       	mov	r31, r11
 568:	ff 77       	andi	r31, 0x7F	; 127
 56a:	3f 2e       	mov	r3, r31
 56c:	36 fe       	sbrs	r3, 6
 56e:	0d c0       	rjmp	.+26     	; 0x58a <__EEPROM_REGION_LENGTH__+0x18a>
 570:	23 2d       	mov	r18, r3
 572:	2e 7f       	andi	r18, 0xFE	; 254
 574:	a2 2e       	mov	r10, r18
 576:	89 14       	cp	r8, r9
 578:	58 f4       	brcc	.+22     	; 0x590 <__EEPROM_REGION_LENGTH__+0x190>
 57a:	34 fe       	sbrs	r3, 4
 57c:	0b c0       	rjmp	.+22     	; 0x594 <__EEPROM_REGION_LENGTH__+0x194>
 57e:	32 fc       	sbrc	r3, 2
 580:	09 c0       	rjmp	.+18     	; 0x594 <__EEPROM_REGION_LENGTH__+0x194>
 582:	83 2d       	mov	r24, r3
 584:	8e 7e       	andi	r24, 0xEE	; 238
 586:	a8 2e       	mov	r10, r24
 588:	05 c0       	rjmp	.+10     	; 0x594 <__EEPROM_REGION_LENGTH__+0x194>
 58a:	b8 2c       	mov	r11, r8
 58c:	a3 2c       	mov	r10, r3
 58e:	03 c0       	rjmp	.+6      	; 0x596 <__EEPROM_REGION_LENGTH__+0x196>
 590:	b8 2c       	mov	r11, r8
 592:	01 c0       	rjmp	.+2      	; 0x596 <__EEPROM_REGION_LENGTH__+0x196>
 594:	b9 2c       	mov	r11, r9
 596:	a4 fe       	sbrs	r10, 4
 598:	0f c0       	rjmp	.+30     	; 0x5b8 <__EEPROM_REGION_LENGTH__+0x1b8>
 59a:	fe 01       	movw	r30, r28
 59c:	e8 0d       	add	r30, r8
 59e:	f1 1d       	adc	r31, r1
 5a0:	80 81       	ld	r24, Z
 5a2:	80 33       	cpi	r24, 0x30	; 48
 5a4:	21 f4       	brne	.+8      	; 0x5ae <__EEPROM_REGION_LENGTH__+0x1ae>
 5a6:	9a 2d       	mov	r25, r10
 5a8:	99 7e       	andi	r25, 0xE9	; 233
 5aa:	a9 2e       	mov	r10, r25
 5ac:	09 c0       	rjmp	.+18     	; 0x5c0 <__EEPROM_REGION_LENGTH__+0x1c0>
 5ae:	a2 fe       	sbrs	r10, 2
 5b0:	06 c0       	rjmp	.+12     	; 0x5be <__EEPROM_REGION_LENGTH__+0x1be>
 5b2:	b3 94       	inc	r11
 5b4:	b3 94       	inc	r11
 5b6:	04 c0       	rjmp	.+8      	; 0x5c0 <__EEPROM_REGION_LENGTH__+0x1c0>
 5b8:	8a 2d       	mov	r24, r10
 5ba:	86 78       	andi	r24, 0x86	; 134
 5bc:	09 f0       	breq	.+2      	; 0x5c0 <__EEPROM_REGION_LENGTH__+0x1c0>
 5be:	b3 94       	inc	r11
 5c0:	a3 fc       	sbrc	r10, 3
 5c2:	11 c0       	rjmp	.+34     	; 0x5e6 <__EEPROM_REGION_LENGTH__+0x1e6>
 5c4:	a0 fe       	sbrs	r10, 0
 5c6:	06 c0       	rjmp	.+12     	; 0x5d4 <__EEPROM_REGION_LENGTH__+0x1d4>
 5c8:	b2 14       	cp	r11, r2
 5ca:	88 f4       	brcc	.+34     	; 0x5ee <__EEPROM_REGION_LENGTH__+0x1ee>
 5cc:	28 0c       	add	r2, r8
 5ce:	92 2c       	mov	r9, r2
 5d0:	9b 18       	sub	r9, r11
 5d2:	0e c0       	rjmp	.+28     	; 0x5f0 <__EEPROM_REGION_LENGTH__+0x1f0>
 5d4:	b2 14       	cp	r11, r2
 5d6:	60 f4       	brcc	.+24     	; 0x5f0 <__EEPROM_REGION_LENGTH__+0x1f0>
 5d8:	b6 01       	movw	r22, r12
 5da:	80 e2       	ldi	r24, 0x20	; 32
 5dc:	90 e0       	ldi	r25, 0x00	; 0
 5de:	0e 94 57 03 	call	0x6ae	; 0x6ae <fputc>
 5e2:	b3 94       	inc	r11
 5e4:	f7 cf       	rjmp	.-18     	; 0x5d4 <__EEPROM_REGION_LENGTH__+0x1d4>
 5e6:	b2 14       	cp	r11, r2
 5e8:	18 f4       	brcc	.+6      	; 0x5f0 <__EEPROM_REGION_LENGTH__+0x1f0>
 5ea:	2b 18       	sub	r2, r11
 5ec:	02 c0       	rjmp	.+4      	; 0x5f2 <__EEPROM_REGION_LENGTH__+0x1f2>
 5ee:	98 2c       	mov	r9, r8
 5f0:	21 2c       	mov	r2, r1
 5f2:	a4 fe       	sbrs	r10, 4
 5f4:	10 c0       	rjmp	.+32     	; 0x616 <__EEPROM_REGION_LENGTH__+0x216>
 5f6:	b6 01       	movw	r22, r12
 5f8:	80 e3       	ldi	r24, 0x30	; 48
 5fa:	90 e0       	ldi	r25, 0x00	; 0
 5fc:	0e 94 57 03 	call	0x6ae	; 0x6ae <fputc>
 600:	a2 fe       	sbrs	r10, 2
 602:	17 c0       	rjmp	.+46     	; 0x632 <__EEPROM_REGION_LENGTH__+0x232>
 604:	a1 fc       	sbrc	r10, 1
 606:	03 c0       	rjmp	.+6      	; 0x60e <__EEPROM_REGION_LENGTH__+0x20e>
 608:	88 e7       	ldi	r24, 0x78	; 120
 60a:	90 e0       	ldi	r25, 0x00	; 0
 60c:	02 c0       	rjmp	.+4      	; 0x612 <__EEPROM_REGION_LENGTH__+0x212>
 60e:	88 e5       	ldi	r24, 0x58	; 88
 610:	90 e0       	ldi	r25, 0x00	; 0
 612:	b6 01       	movw	r22, r12
 614:	0c c0       	rjmp	.+24     	; 0x62e <__EEPROM_REGION_LENGTH__+0x22e>
 616:	8a 2d       	mov	r24, r10
 618:	86 78       	andi	r24, 0x86	; 134
 61a:	59 f0       	breq	.+22     	; 0x632 <__EEPROM_REGION_LENGTH__+0x232>
 61c:	a1 fe       	sbrs	r10, 1
 61e:	02 c0       	rjmp	.+4      	; 0x624 <__EEPROM_REGION_LENGTH__+0x224>
 620:	8b e2       	ldi	r24, 0x2B	; 43
 622:	01 c0       	rjmp	.+2      	; 0x626 <__EEPROM_REGION_LENGTH__+0x226>
 624:	80 e2       	ldi	r24, 0x20	; 32
 626:	a7 fc       	sbrc	r10, 7
 628:	8d e2       	ldi	r24, 0x2D	; 45
 62a:	b6 01       	movw	r22, r12
 62c:	90 e0       	ldi	r25, 0x00	; 0
 62e:	0e 94 57 03 	call	0x6ae	; 0x6ae <fputc>
 632:	89 14       	cp	r8, r9
 634:	38 f4       	brcc	.+14     	; 0x644 <__EEPROM_REGION_LENGTH__+0x244>
 636:	b6 01       	movw	r22, r12
 638:	80 e3       	ldi	r24, 0x30	; 48
 63a:	90 e0       	ldi	r25, 0x00	; 0
 63c:	0e 94 57 03 	call	0x6ae	; 0x6ae <fputc>
 640:	9a 94       	dec	r9
 642:	f7 cf       	rjmp	.-18     	; 0x632 <__EEPROM_REGION_LENGTH__+0x232>
 644:	8a 94       	dec	r8
 646:	f3 01       	movw	r30, r6
 648:	e8 0d       	add	r30, r8
 64a:	f1 1d       	adc	r31, r1
 64c:	80 81       	ld	r24, Z
 64e:	b6 01       	movw	r22, r12
 650:	90 e0       	ldi	r25, 0x00	; 0
 652:	0e 94 57 03 	call	0x6ae	; 0x6ae <fputc>
 656:	81 10       	cpse	r8, r1
 658:	f5 cf       	rjmp	.-22     	; 0x644 <__EEPROM_REGION_LENGTH__+0x244>
 65a:	22 20       	and	r2, r2
 65c:	09 f4       	brne	.+2      	; 0x660 <__EEPROM_REGION_LENGTH__+0x260>
 65e:	42 ce       	rjmp	.-892    	; 0x2e4 <vfprintf+0x24>
 660:	b6 01       	movw	r22, r12
 662:	80 e2       	ldi	r24, 0x20	; 32
 664:	90 e0       	ldi	r25, 0x00	; 0
 666:	0e 94 57 03 	call	0x6ae	; 0x6ae <fputc>
 66a:	2a 94       	dec	r2
 66c:	f6 cf       	rjmp	.-20     	; 0x65a <__EEPROM_REGION_LENGTH__+0x25a>
 66e:	f6 01       	movw	r30, r12
 670:	86 81       	ldd	r24, Z+6	; 0x06
 672:	97 81       	ldd	r25, Z+7	; 0x07
 674:	02 c0       	rjmp	.+4      	; 0x67a <__EEPROM_REGION_LENGTH__+0x27a>
 676:	8f ef       	ldi	r24, 0xFF	; 255
 678:	9f ef       	ldi	r25, 0xFF	; 255
 67a:	2b 96       	adiw	r28, 0x0b	; 11
 67c:	e2 e1       	ldi	r30, 0x12	; 18
 67e:	0c 94 0d 04 	jmp	0x81a	; 0x81a <__epilogue_restores__>

00000682 <strnlen_P>:
 682:	fc 01       	movw	r30, r24
 684:	05 90       	lpm	r0, Z+
 686:	61 50       	subi	r22, 0x01	; 1
 688:	70 40       	sbci	r23, 0x00	; 0
 68a:	01 10       	cpse	r0, r1
 68c:	d8 f7       	brcc	.-10     	; 0x684 <strnlen_P+0x2>
 68e:	80 95       	com	r24
 690:	90 95       	com	r25
 692:	8e 0f       	add	r24, r30
 694:	9f 1f       	adc	r25, r31
 696:	08 95       	ret

00000698 <strnlen>:
 698:	fc 01       	movw	r30, r24
 69a:	61 50       	subi	r22, 0x01	; 1
 69c:	70 40       	sbci	r23, 0x00	; 0
 69e:	01 90       	ld	r0, Z+
 6a0:	01 10       	cpse	r0, r1
 6a2:	d8 f7       	brcc	.-10     	; 0x69a <strnlen+0x2>
 6a4:	80 95       	com	r24
 6a6:	90 95       	com	r25
 6a8:	8e 0f       	add	r24, r30
 6aa:	9f 1f       	adc	r25, r31
 6ac:	08 95       	ret

000006ae <fputc>:
 6ae:	0f 93       	push	r16
 6b0:	1f 93       	push	r17
 6b2:	cf 93       	push	r28
 6b4:	df 93       	push	r29
 6b6:	fb 01       	movw	r30, r22
 6b8:	23 81       	ldd	r18, Z+3	; 0x03
 6ba:	21 fd       	sbrc	r18, 1
 6bc:	03 c0       	rjmp	.+6      	; 0x6c4 <fputc+0x16>
 6be:	8f ef       	ldi	r24, 0xFF	; 255
 6c0:	9f ef       	ldi	r25, 0xFF	; 255
 6c2:	2c c0       	rjmp	.+88     	; 0x71c <fputc+0x6e>
 6c4:	22 ff       	sbrs	r18, 2
 6c6:	16 c0       	rjmp	.+44     	; 0x6f4 <fputc+0x46>
 6c8:	46 81       	ldd	r20, Z+6	; 0x06
 6ca:	57 81       	ldd	r21, Z+7	; 0x07
 6cc:	24 81       	ldd	r18, Z+4	; 0x04
 6ce:	35 81       	ldd	r19, Z+5	; 0x05
 6d0:	42 17       	cp	r20, r18
 6d2:	53 07       	cpc	r21, r19
 6d4:	44 f4       	brge	.+16     	; 0x6e6 <fputc+0x38>
 6d6:	a0 81       	ld	r26, Z
 6d8:	b1 81       	ldd	r27, Z+1	; 0x01
 6da:	9d 01       	movw	r18, r26
 6dc:	2f 5f       	subi	r18, 0xFF	; 255
 6de:	3f 4f       	sbci	r19, 0xFF	; 255
 6e0:	31 83       	std	Z+1, r19	; 0x01
 6e2:	20 83       	st	Z, r18
 6e4:	8c 93       	st	X, r24
 6e6:	26 81       	ldd	r18, Z+6	; 0x06
 6e8:	37 81       	ldd	r19, Z+7	; 0x07
 6ea:	2f 5f       	subi	r18, 0xFF	; 255
 6ec:	3f 4f       	sbci	r19, 0xFF	; 255
 6ee:	37 83       	std	Z+7, r19	; 0x07
 6f0:	26 83       	std	Z+6, r18	; 0x06
 6f2:	14 c0       	rjmp	.+40     	; 0x71c <fputc+0x6e>
 6f4:	8b 01       	movw	r16, r22
 6f6:	ec 01       	movw	r28, r24
 6f8:	fb 01       	movw	r30, r22
 6fa:	00 84       	ldd	r0, Z+8	; 0x08
 6fc:	f1 85       	ldd	r31, Z+9	; 0x09
 6fe:	e0 2d       	mov	r30, r0
 700:	09 95       	icall
 702:	89 2b       	or	r24, r25
 704:	e1 f6       	brne	.-72     	; 0x6be <fputc+0x10>
 706:	d8 01       	movw	r26, r16
 708:	16 96       	adiw	r26, 0x06	; 6
 70a:	8d 91       	ld	r24, X+
 70c:	9c 91       	ld	r25, X
 70e:	17 97       	sbiw	r26, 0x07	; 7
 710:	01 96       	adiw	r24, 0x01	; 1
 712:	17 96       	adiw	r26, 0x07	; 7
 714:	9c 93       	st	X, r25
 716:	8e 93       	st	-X, r24
 718:	16 97       	sbiw	r26, 0x06	; 6
 71a:	ce 01       	movw	r24, r28
 71c:	df 91       	pop	r29
 71e:	cf 91       	pop	r28
 720:	1f 91       	pop	r17
 722:	0f 91       	pop	r16
 724:	08 95       	ret

00000726 <__ultoa_invert>:
 726:	fa 01       	movw	r30, r20
 728:	aa 27       	eor	r26, r26
 72a:	28 30       	cpi	r18, 0x08	; 8
 72c:	51 f1       	breq	.+84     	; 0x782 <__ultoa_invert+0x5c>
 72e:	20 31       	cpi	r18, 0x10	; 16
 730:	81 f1       	breq	.+96     	; 0x792 <__ultoa_invert+0x6c>
 732:	e8 94       	clt
 734:	6f 93       	push	r22
 736:	6e 7f       	andi	r22, 0xFE	; 254
 738:	6e 5f       	subi	r22, 0xFE	; 254
 73a:	7f 4f       	sbci	r23, 0xFF	; 255
 73c:	8f 4f       	sbci	r24, 0xFF	; 255
 73e:	9f 4f       	sbci	r25, 0xFF	; 255
 740:	af 4f       	sbci	r26, 0xFF	; 255
 742:	b1 e0       	ldi	r27, 0x01	; 1
 744:	3e d0       	rcall	.+124    	; 0x7c2 <__ultoa_invert+0x9c>
 746:	b4 e0       	ldi	r27, 0x04	; 4
 748:	3c d0       	rcall	.+120    	; 0x7c2 <__ultoa_invert+0x9c>
 74a:	67 0f       	add	r22, r23
 74c:	78 1f       	adc	r23, r24
 74e:	89 1f       	adc	r24, r25
 750:	9a 1f       	adc	r25, r26
 752:	a1 1d       	adc	r26, r1
 754:	68 0f       	add	r22, r24
 756:	79 1f       	adc	r23, r25
 758:	8a 1f       	adc	r24, r26
 75a:	91 1d       	adc	r25, r1
 75c:	a1 1d       	adc	r26, r1
 75e:	6a 0f       	add	r22, r26
 760:	71 1d       	adc	r23, r1
 762:	81 1d       	adc	r24, r1
 764:	91 1d       	adc	r25, r1
 766:	a1 1d       	adc	r26, r1
 768:	20 d0       	rcall	.+64     	; 0x7aa <__ultoa_invert+0x84>
 76a:	09 f4       	brne	.+2      	; 0x76e <__ultoa_invert+0x48>
 76c:	68 94       	set
 76e:	3f 91       	pop	r19
 770:	2a e0       	ldi	r18, 0x0A	; 10
 772:	26 9f       	mul	r18, r22
 774:	11 24       	eor	r1, r1
 776:	30 19       	sub	r19, r0
 778:	30 5d       	subi	r19, 0xD0	; 208
 77a:	31 93       	st	Z+, r19
 77c:	de f6       	brtc	.-74     	; 0x734 <__ultoa_invert+0xe>
 77e:	cf 01       	movw	r24, r30
 780:	08 95       	ret
 782:	46 2f       	mov	r20, r22
 784:	47 70       	andi	r20, 0x07	; 7
 786:	40 5d       	subi	r20, 0xD0	; 208
 788:	41 93       	st	Z+, r20
 78a:	b3 e0       	ldi	r27, 0x03	; 3
 78c:	0f d0       	rcall	.+30     	; 0x7ac <__ultoa_invert+0x86>
 78e:	c9 f7       	brne	.-14     	; 0x782 <__ultoa_invert+0x5c>
 790:	f6 cf       	rjmp	.-20     	; 0x77e <__ultoa_invert+0x58>
 792:	46 2f       	mov	r20, r22
 794:	4f 70       	andi	r20, 0x0F	; 15
 796:	40 5d       	subi	r20, 0xD0	; 208
 798:	4a 33       	cpi	r20, 0x3A	; 58
 79a:	18 f0       	brcs	.+6      	; 0x7a2 <__ultoa_invert+0x7c>
 79c:	49 5d       	subi	r20, 0xD9	; 217
 79e:	31 fd       	sbrc	r19, 1
 7a0:	40 52       	subi	r20, 0x20	; 32
 7a2:	41 93       	st	Z+, r20
 7a4:	02 d0       	rcall	.+4      	; 0x7aa <__ultoa_invert+0x84>
 7a6:	a9 f7       	brne	.-22     	; 0x792 <__ultoa_invert+0x6c>
 7a8:	ea cf       	rjmp	.-44     	; 0x77e <__ultoa_invert+0x58>
 7aa:	b4 e0       	ldi	r27, 0x04	; 4
 7ac:	a6 95       	lsr	r26
 7ae:	97 95       	ror	r25
 7b0:	87 95       	ror	r24
 7b2:	77 95       	ror	r23
 7b4:	67 95       	ror	r22
 7b6:	ba 95       	dec	r27
 7b8:	c9 f7       	brne	.-14     	; 0x7ac <__ultoa_invert+0x86>
 7ba:	00 97       	sbiw	r24, 0x00	; 0
 7bc:	61 05       	cpc	r22, r1
 7be:	71 05       	cpc	r23, r1
 7c0:	08 95       	ret
 7c2:	9b 01       	movw	r18, r22
 7c4:	ac 01       	movw	r20, r24
 7c6:	0a 2e       	mov	r0, r26
 7c8:	06 94       	lsr	r0
 7ca:	57 95       	ror	r21
 7cc:	47 95       	ror	r20
 7ce:	37 95       	ror	r19
 7d0:	27 95       	ror	r18
 7d2:	ba 95       	dec	r27
 7d4:	c9 f7       	brne	.-14     	; 0x7c8 <__ultoa_invert+0xa2>
 7d6:	62 0f       	add	r22, r18
 7d8:	73 1f       	adc	r23, r19
 7da:	84 1f       	adc	r24, r20
 7dc:	95 1f       	adc	r25, r21
 7de:	a0 1d       	adc	r26, r0
 7e0:	08 95       	ret

000007e2 <__prologue_saves__>:
 7e2:	2f 92       	push	r2
 7e4:	3f 92       	push	r3
 7e6:	4f 92       	push	r4
 7e8:	5f 92       	push	r5
 7ea:	6f 92       	push	r6
 7ec:	7f 92       	push	r7
 7ee:	8f 92       	push	r8
 7f0:	9f 92       	push	r9
 7f2:	af 92       	push	r10
 7f4:	bf 92       	push	r11
 7f6:	cf 92       	push	r12
 7f8:	df 92       	push	r13
 7fa:	ef 92       	push	r14
 7fc:	ff 92       	push	r15
 7fe:	0f 93       	push	r16
 800:	1f 93       	push	r17
 802:	cf 93       	push	r28
 804:	df 93       	push	r29
 806:	cd b7       	in	r28, 0x3d	; 61
 808:	de b7       	in	r29, 0x3e	; 62
 80a:	ca 1b       	sub	r28, r26
 80c:	db 0b       	sbc	r29, r27
 80e:	0f b6       	in	r0, 0x3f	; 63
 810:	f8 94       	cli
 812:	de bf       	out	0x3e, r29	; 62
 814:	0f be       	out	0x3f, r0	; 63
 816:	cd bf       	out	0x3d, r28	; 61
 818:	09 94       	ijmp

0000081a <__epilogue_restores__>:
 81a:	2a 88       	ldd	r2, Y+18	; 0x12
 81c:	39 88       	ldd	r3, Y+17	; 0x11
 81e:	48 88       	ldd	r4, Y+16	; 0x10
 820:	5f 84       	ldd	r5, Y+15	; 0x0f
 822:	6e 84       	ldd	r6, Y+14	; 0x0e
 824:	7d 84       	ldd	r7, Y+13	; 0x0d
 826:	8c 84       	ldd	r8, Y+12	; 0x0c
 828:	9b 84       	ldd	r9, Y+11	; 0x0b
 82a:	aa 84       	ldd	r10, Y+10	; 0x0a
 82c:	b9 84       	ldd	r11, Y+9	; 0x09
 82e:	c8 84       	ldd	r12, Y+8	; 0x08
 830:	df 80       	ldd	r13, Y+7	; 0x07
 832:	ee 80       	ldd	r14, Y+6	; 0x06
 834:	fd 80       	ldd	r15, Y+5	; 0x05
 836:	0c 81       	ldd	r16, Y+4	; 0x04
 838:	1b 81       	ldd	r17, Y+3	; 0x03
 83a:	aa 81       	ldd	r26, Y+2	; 0x02
 83c:	b9 81       	ldd	r27, Y+1	; 0x01
 83e:	ce 0f       	add	r28, r30
 840:	d1 1d       	adc	r29, r1
 842:	0f b6       	in	r0, 0x3f	; 63
 844:	f8 94       	cli
 846:	de bf       	out	0x3e, r29	; 62
 848:	0f be       	out	0x3f, r0	; 63
 84a:	cd bf       	out	0x3d, r28	; 61
 84c:	ed 01       	movw	r28, r26
 84e:	08 95       	ret

00000850 <_exit>:
 850:	f8 94       	cli

00000852 <__stop_program>:
 852:	ff cf       	rjmp	.-2      	; 0x852 <__stop_program>
